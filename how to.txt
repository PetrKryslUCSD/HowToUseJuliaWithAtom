========================================================================
-- Atom packages
uber-juno
minimap
auto-indent
split-diff
simple-drag-drop-text
highlight-line
file-icons
project-manager

========================================================================
-- When  Atom would not start: run this
  atom --clear-window-state
  in a command window

========================================================================
-- in  keymap.cson
  'atom-text-editor':
    'ctrl-space': 'autocomplete-plus:activate'

    'atom-text-editor:not([mini])':
      'ctrl-shift-alt-C': 'editor:copy-path'

    'atom-text-editor':
      'ctrl-shift-alt-I': 'editor:auto-indent'
      'ctrl-shift-alt-w': 'editor:select-word'

    'body':
      'ctrl-shift-0': 'window:toggle-dev-tools'
  '.platform-win32 .find-and-replace, .platform-linux .find-and-replace':
    'alt-shift-ctrl-r': 'find-and-replace:replace-next'


========================================================================
  -- Atom platformio terminal:  set Auto run command to
  /c/Users/PetrKrysl/AppData/Local/Julia-0.7.0-DEV/bin/julia.exe
  set Show override to
  C:\Program Files\Git\bin\bash.exe

========================================================================
  -- Key bindings for Atom

  'atom-text-editor':
    'ctrl-space': 'autocomplete-plus:activate'

  '.platform-win32 .find-and-replace, .platform-linux .find-and-replace':
    'alt-shift-ctrl-r': 'find-and-replace:replace-next'

  '.platform-linux atom-workspace, .platform-win32 atom-workspace':
    'alt-ctrl-shift-enter': 'platformio-ide-terminal:insert-selected-text'

		'atom-text-editor':
		  'ctrl-alt-I': 'editor:auto-indent'

========================================================================
-- Snippets:


'.source.julia':
  'forloop':
    'prefix': 'forloop'
    'body': 'for ${1:i} in ${2:1:length(${3:a})}\n
	       ${0:${3:a}[${1:i}]}\n
     end $1'
  'comprehension':
     'prefix': 'comprehension'
     'body': '[${0:a[${1:idx}]} for ${1:idx} in ${2:collection}]'
  'counter of':
    'prefix': 'counterof'
    'body': 'cnt${1:something}'
  'number of':
    'prefix': 'numberof'
    'body': 'num${1:something}'
  'doc string':
    'prefix': 'thedocs'
    'body': '"""\n    ${1:bar(x[, y])}\n\n# Arguments\n${0:Compute}\n"""'
  'if else':
    'prefix': 'ifelse'
    'body': 'if ${1:condition}\n${2:whenconditionistrue}\nelse\n${2:whenconditionisfalse}\nend'
  'set up test module':
    'prefix': 'setuptestmodule'
    'body': 'module ${1:modulename}\n
using FinEtools\n
using Test\n
function test()\n
	${0:body}\n
end\n
end\n
using .${1:modulename}\n
${1:modulename}.test()\n'

========================================================================
- styles.less:

/*
 * Your Stylesheet
 *
 * This stylesheet is loaded when Atom starts up and is reloaded automatically
 * when it is changed and saved.
 *
 * Add your own CSS or Less to fully customize Atom.
 * If you are unfamiliar with Less, you can read more about it here:
 * http://lesscss.org
 */

// style the background and foreground colors on the atom-text-editor-element itself
atom-text-editor {
  color: hsl(10, 10%, 60%);
  background-color: hsl(190, 10%, 12%);
}

// style UI elements inside atom-text-editor
atom-text-editor .cursor {
  border-color: red;
}

atom-text-editor {
	.selection .region {
		background-color: rgba(0,0,180,0.59);
	}
}
